version: '3.8'

services:
  octo_base:
    image: octo_base
    build:
      context: .
      dockerfile: docker/base.Dockerfile
    depends_on:
      - octo_db
      - rabbitmq
  octo_db:
    image: postgres:15-alpine
    container_name: octo_db
    volumes:
      - octo_db_vol:/var/lib/postgresql/data:Z
    ports:
      - '${POSTGRES_PORT:-5432}'
    env_file:
      - '.env'
    command:
      ['postgres', '-c', 'log_statement=all', '-c', 'log_destination=stderr']

  octo_web: &octo_web
    build:
      context: .
      dockerfile: docker/be.Dockerfile

    container_name: octo_web
    depends_on:
      - octo_base
    volumes:
      - .:/home/app/web:z
    env_file:
      - '.env'
    ports:
      - '8000:8000'
    command: python manage.py runserver 0.0.0.0:8000

  redis:
    image: redis
    container_name: octo__redis
# Additional service for the frontend
  octo_fe:
    build:
      context: .
      dockerfile: docker/fe.Dockerfile
    container_name: octo_fe
    env_file:
      - '.env'
    ports:
      - '3000:3000'  # Port for your frontend dev server
      - "8080:8080"  # Maps port 8080 inside the container to port 8080 on your host
    depends_on:
      - octo_base
    command: yarn start  # Change to your frontend directory and start the dev server

  celeryworker:
    <<: *octo_web
    container_name: octo_celery
    env_file:
      - ".env"
    volumes:
      - .:/home/app/web:z
      - ../PoseTriplet:/home/app/web/PoseTriplet
    ports: []
    command: celery --app config.celery:app worker --loglevel INFO
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
  flower:
    <<: *octo_web
    container_name: octo_flower
    ports:
      - "5555:5555"
    env_file:
      - ".env"
    command: celery --app config.celery:app flower --url_prefix=flower --persistent=True --loglevel INFO

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    hostname: octo_rabbit
    env_file:
      - ".env"
    volumes:
      - "./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf"
      - "./rabbitmq/definitions.json:/etc/rabbitmq/definitions.json"
    ports:
      - "15672:15672"

volumes:
  octo_db_vol: {}
